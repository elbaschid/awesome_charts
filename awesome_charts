#! /usr/bin/env python
# -*- coding: utf-8 -*-
import argparse

from awesome import AwesomeBar
from colourlovers import ColourLovers

def get_labels_values(args_list):
    labels = []
    values = []
    for raw_value in args_list:
        try:
            label, value = raw_value.rsplit(':', 1)
            labels.append(label)
            values.append(value)
        except ValueError:
            print "cannot determine 'label:value' from '%s'" % raw_value
    return labels, values

def main():

    parser = argparse.ArgumentParser()

    parser.add_argument(
        '-a', '--awesomeness', nargs='*', default=[],
        help="awesomeness as list of 'label:value' with value in %"
    )
    parser.add_argument(
        '-i', '--input', default=None,
        help='input file defining an awesome bar in each line'
    )
    parser.add_argument(
        '-p', '--palette', default='random',
        help='define how to search for a palette on ColourLovers',
    )
    parser.add_argument(
        '-t', '--title',
        help='text used as title for the awesome bar'
    )
    parser.add_argument(
        '-o', '--output', 
        help='filename the SVG should be saved to' 
    )

    args = parser.parse_args()

    batch_list = []
    if len(args.awesomeness) > 0:
        batch_list.append(args)

    elif args.input:
        with open(args.input, 'r') as input_file:
            for line in input_file:

                if len(line.strip()) == 0 or line.startswith('#'):
                    continue

                args_list = [x.strip() for x in line.strip().split(';')]
                batch_list.append(
                    parser.parse_args([
                        '-t', args_list[0], 
                        '-p', args_list[1],
                        '-o', args_list[2],
                        '-a'
                    ] + args_list[3:])
                )
                
    cl_api = ColourLovers()

    for args in batch_list:
        labels, values = get_labels_values(args.awesomeness)

        try:
            palettes = cl_api.palette(args.palette)
        except:
            print "Could not get palette %s from ColourLovers. "  % args.palette +\
                  "Using default."
            palettes = []

        colours = []
        ##extract list of hex values from palette
        if len(palettes) > 0:
            for hex_code in palettes[0].colours:
                colours.append(hex_code)

        awesome_bar = AwesomeBar(
            args.title,
            values,  
            labels=labels,
            colors=colours,
            fontFamily='Ubuntu', 
            fontStyle='Regular',
        )

        if args.output:
            print "Writing AwesomeBar '%s' to file: %s" % (args.title, args.output)
            with open(args.output, 'w') as out_fh:
                awesome_bar.write(out_fh)
        else:
            show(awesome_bar, awesome_bar.width, awesome_bar.height)

if __name__ == "__main__":
    main()
